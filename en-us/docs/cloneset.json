{
  "filename": "cloneset.md",
  "__html": "<h1>CloneSet</h1>\n<p>This controller provides advanced features to efficiently manage stateless applications that\ndo not have instance order requirement during scaling and rollout. Analogously,\nCloneSet can be recognized as an enhanced version of upstream <code>Deployment</code> workload, but it does many more.</p>\n<p>As name suggests, CloneSet is a <a href=\"../blog/blog1.html\"><strong>Set</strong> -suffix controller</a> which\nmanages Pods directly. A sample CloneSet yaml looks like following:</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">CloneSet</span>\n<span class=\"hljs-attr\">metadata:</span>\n  <span class=\"hljs-attr\">labels:</span>\n    <span class=\"hljs-attr\">app:</span> <span class=\"hljs-string\">sample</span>\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">sample</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-attr\">replicas:</span> <span class=\"hljs-number\">5</span>\n  <span class=\"hljs-attr\">selector:</span>\n    <span class=\"hljs-attr\">matchLabels:</span>\n      <span class=\"hljs-attr\">app:</span> <span class=\"hljs-string\">sample</span>\n  <span class=\"hljs-attr\">template:</span>\n    <span class=\"hljs-attr\">metadata:</span>\n      <span class=\"hljs-attr\">labels:</span>\n        <span class=\"hljs-attr\">app:</span> <span class=\"hljs-string\">sample</span>\n    <span class=\"hljs-attr\">spec:</span>\n      <span class=\"hljs-attr\">containers:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">nginx</span>\n        <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">nginx:alpine</span>\n</code></pre>\n<h2>Scale features</h2>\n<h3>Support PVCs</h3>\n<p>CloneSet allows user to define PVC templates <code>volumeClaimTemplates</code> in <code>CloneSetSpec</code>, which can support PVCs per Pod.\nThis cannot be done with <code>Deployment</code>. If not specified, CloneSet will only create Pods without PVCs.</p>\n<p>A few reminders:</p>\n<ul>\n<li>Each PVC created by CloneSet has an owner reference. So when a CloneSet has been deleted, its PVCs will be cascading deleted.</li>\n<li>Each Pod and PVC created by CloneSet has a &quot;<a href=\"http://apps.kruise.io/cloneset-instance-id\">apps.kruise.io/cloneset-instance-id</a>&quot; label key. They use the same string as label value which is composed of a unique  <strong>instance-id</strong> as suffix of the CloneSet name.</li>\n<li>When a Pod has been deleted by CloneSet controller, all PVCs related to it will be deleted together.</li>\n<li>When a Pod has been deleted manually, all PVCs related to the Pod are preserved, and CloneSet controller will create a new Pod with the same <strong>instance-id</strong> and reuse the PVCs.</li>\n<li>When a Pod is updated using <strong>recreate</strong> policy, all PVCs related to it will be deleted together.</li>\n<li>When a Pod is updated using <strong>in-place</strong> policy, all PVCs related to it are preserved.</li>\n</ul>\n<p>The following shows a sample CloneSet yaml file which contains PVC templates.</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">CloneSet</span>\n<span class=\"hljs-attr\">metadata:</span>\n  <span class=\"hljs-attr\">labels:</span>\n    <span class=\"hljs-attr\">app:</span> <span class=\"hljs-string\">sample</span>\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">sample-data</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-attr\">replicas:</span> <span class=\"hljs-number\">5</span>\n  <span class=\"hljs-attr\">selector:</span>\n    <span class=\"hljs-attr\">matchLabels:</span>\n      <span class=\"hljs-attr\">app:</span> <span class=\"hljs-string\">sample</span>\n  <span class=\"hljs-attr\">template:</span>\n    <span class=\"hljs-attr\">metadata:</span>\n      <span class=\"hljs-attr\">labels:</span>\n        <span class=\"hljs-attr\">app:</span> <span class=\"hljs-string\">sample</span>\n    <span class=\"hljs-attr\">spec:</span>\n      <span class=\"hljs-attr\">containers:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">nginx</span>\n        <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">nginx:alpine</span>\n        <span class=\"hljs-attr\">volumeMounts:</span>\n        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">data-vol</span>\n          <span class=\"hljs-attr\">mountPath:</span> <span class=\"hljs-string\">/usr/share/nginx/html</span>\n  <span class=\"hljs-attr\">volumeClaimTemplates:</span>\n    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">metadata:</span>\n        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">data-vol</span>\n      <span class=\"hljs-attr\">spec:</span>\n        <span class=\"hljs-attr\">accessModes:</span> <span class=\"hljs-string\">[</span> <span class=\"hljs-string\">\"ReadWriteOnce\"</span> <span class=\"hljs-string\">]</span>\n        <span class=\"hljs-attr\">resources:</span>\n          <span class=\"hljs-attr\">requests:</span>\n            <span class=\"hljs-attr\">storage:</span> <span class=\"hljs-string\">20Gi</span>\n</code></pre>\n<h3>Selective Pod deletion</h3>\n<p>When a CloneSet is scaled down, sometimes user has preference to deleting specific Pods.\nThis cannot be done using <code>StatefulSet</code> or <code>Deployment</code>, because <code>StatefulSet</code> always delete Pod\nin order and <code>Deployment</code>/<code>ReplicaSet</code> only delete Pod by its own sorted sequence.</p>\n<p>CloneSet allows user to specify to-be-deleted Pod names when scaling down <code>replicas</code>. Take the following\nsample as an example,</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">CloneSet</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-comment\"># ...</span>\n  <span class=\"hljs-attr\">replicas:</span> <span class=\"hljs-number\">4</span>\n  <span class=\"hljs-attr\">scaleStrategy:</span>\n    <span class=\"hljs-attr\">podsToDelete:</span>\n    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">sample-9m4hp</span>\n</code></pre>\n<p>when controller receives above update request, it ensures the number of replicas to be 4. If some Pods needs to be\ndeleted, the Pods listed in <code>podsToDelete</code> will be deleted first.\nController will clear <code>podsToDelete</code> automatically once the listed Pods are deleted. Note that:</p>\n<ul>\n<li>If one just adds a Pod name to <code>podsToDelete</code> and do not modify <code>replicas</code>, controller will delete this Pod, and create a new Pod.</li>\n<li>Without specifying <code>podsToDelete</code>, controller will scale down by deleting Pods in the order: not-ready &lt; ready, unscheduled &lt; scheduled, and pending &lt; running.</li>\n</ul>\n<h2>Update features</h2>\n<h3>In-place update</h3>\n<p>CloneSet provides three update policies just like <code>AdvancedStatefulSet</code>, defaults to <code>ReCreate</code>.</p>\n<ul>\n<li><code>ReCreate</code>: controller will delete old Pods and PVCs and create new ones.</li>\n<li><code>InPlaceIfPossible</code>: controller will try to in-place update Pod instead of recreating them if possible. Currently, only <code>spec.template.metadata.*</code> and <code>spec.template.spec.containers[x].image</code> field can be in-place updated.</li>\n<li><code>InPlaceOnly</code>: controller will in-place update Pod instead of recreating them. With <code>InPlaceOnly</code> policy, user cannot modify any fields in <code>spec.template</code> other than <code>spec.template.spec.containers[x].image</code>.</li>\n</ul>\n<p>When a Pod being in-place update, controller will firstly update Pod status to make it become not-ready using readinessGate,\nand then update images in Pod spec to trigger Kubelet recreate the container on Node.\nHowever, sometimes Kubelet recreate containers so fast that other controllers such as endpoints-controller in kcm\nhave not noticed the Pod has turned to not-ready. This may lead to requests damaged.</p>\n<p>So we bring <strong>graceful period</strong> into in-place update. CloneSet has supported <code>gracePeriodSeconds</code>, which is a period\nduration between controller update pod status and update pod images.\nSo that endpoints-controller could have enough time to remove this Pod from endpoints.</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">CloneSet</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-comment\"># ...</span>\n  <span class=\"hljs-attr\">updateStrategy:</span>\n    <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">InPlaceIfPossible</span>\n    <span class=\"hljs-attr\">inPlaceUpdateStrategy:</span>\n      <span class=\"hljs-attr\">gracePeriodSeconds:</span> <span class=\"hljs-number\">10</span>\n</code></pre>\n<h3>Template and revision</h3>\n<p><code>spec.template</code> defines the latest pod template in the CloneSet.\nController will calculate a revision hash for each version of <code>spec.template</code> when it has been initialized or modified.\nFor example, when we create a sample CloneSet, controller will calculate the revision hash <code>sample-744d4796cc</code> and\npresent the hash in CloneSet Status.</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">CloneSet</span>\n<span class=\"hljs-attr\">metadata:</span>\n  <span class=\"hljs-attr\">generation:</span> <span class=\"hljs-number\">1</span>\n  <span class=\"hljs-comment\"># ...</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-attr\">replicas:</span> <span class=\"hljs-number\">5</span>\n  <span class=\"hljs-comment\"># ...</span>\n<span class=\"hljs-attr\">status:</span>\n  <span class=\"hljs-attr\">observedGeneration:</span> <span class=\"hljs-number\">1</span>\n  <span class=\"hljs-attr\">readyReplicas:</span> <span class=\"hljs-number\">5</span>\n  <span class=\"hljs-attr\">replicas:</span> <span class=\"hljs-number\">5</span>\n  <span class=\"hljs-attr\">updateRevision:</span> <span class=\"hljs-string\">sample-d4d4fb5bd</span>\n  <span class=\"hljs-attr\">updatedReadyReplicas:</span> <span class=\"hljs-number\">5</span>\n  <span class=\"hljs-attr\">updatedReplicas:</span> <span class=\"hljs-number\">5</span>\n  <span class=\"hljs-comment\"># ...</span>\n</code></pre>\n<p>Here are the explanations for the counters presented in CloneSet status:</p>\n<ul>\n<li><code>status.replicas</code>: Number of pods</li>\n<li><code>status.readyReplicas</code>: Number of <strong>ready</strong> pods</li>\n<li><code>status.availableReplicas</code>: Number of <strong>ready and available</strong> pods (satisfied with <code>minReadySeconds</code>)</li>\n<li><code>status.updateRevision</code>: Latest revision hash of this CloneSet</li>\n<li><code>status.updatedReplicas</code>: Number of pods with the latest revision</li>\n<li><code>status.updatedReadyReplicas</code>: Number of <strong>ready</strong> pods with the latest revision</li>\n</ul>\n<h3>Partition</h3>\n<p>Partition is the <strong>desired number of Pods in old revisions</strong>, defaults to <code>0</code>.\nWhen <code>partition</code> is set during update, <code>(replicas - partition)</code> number of pods will be updated with the new version. This field does <strong>NOT</strong> imply any update order.</p>\n<p>For example, when we update sample CloneSet's container image to <code>nginx:mainline</code> and set <code>partition=3</code>, after a while, the sample CloneSet yaml looks like the following:</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">CloneSet</span>\n<span class=\"hljs-attr\">metadata:</span>\n  <span class=\"hljs-comment\"># ...</span>\n  <span class=\"hljs-attr\">generation:</span> <span class=\"hljs-number\">2</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-attr\">replicas:</span> <span class=\"hljs-number\">5</span>\n  <span class=\"hljs-attr\">template:</span>\n    <span class=\"hljs-attr\">metadata:</span>\n      <span class=\"hljs-attr\">labels:</span>\n        <span class=\"hljs-attr\">app:</span> <span class=\"hljs-string\">sample</span>\n    <span class=\"hljs-attr\">spec:</span>\n      <span class=\"hljs-attr\">containers:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">nginx:mainline</span>\n        <span class=\"hljs-attr\">imagePullPolicy:</span> <span class=\"hljs-string\">Always</span>\n        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">nginx</span>\n  <span class=\"hljs-attr\">updateStrategy:</span>\n    <span class=\"hljs-attr\">partition:</span> <span class=\"hljs-number\">3</span>\n  <span class=\"hljs-comment\"># ...</span>\n<span class=\"hljs-attr\">status:</span>\n  <span class=\"hljs-attr\">observedGeneration:</span> <span class=\"hljs-number\">2</span>\n  <span class=\"hljs-attr\">readyReplicas:</span> <span class=\"hljs-number\">5</span>\n  <span class=\"hljs-attr\">replicas:</span> <span class=\"hljs-number\">5</span>\n  <span class=\"hljs-attr\">updateRevision:</span> <span class=\"hljs-string\">sample-56dfb978d4</span>\n  <span class=\"hljs-attr\">updatedReadyReplicas:</span> <span class=\"hljs-number\">2</span>\n  <span class=\"hljs-attr\">updatedReplicas:</span> <span class=\"hljs-number\">2</span>\n</code></pre>\n<p>Note that <code>status.updateRevision</code> has been updated to <code>sample-56dfb978d4</code>, a new hash.\nSince we set <code>partition=3</code>, controller only updates two Pods to the latest revision.</p>\n<pre><code class=\"language-bash\">$ kubectl get pod -L controller-revision-hash\nNAME           READY   STATUS    RESTARTS   AGE     CONTROLLER-REVISION-HASH\nsample-chvnr   1/1     Running   0          6m46s   sample-d4d4fb5bd\nsample-j6c4s   1/1     Running   0          6m46s   sample-d4d4fb5bd\nsample-ns85c   1/1     Running   0          6m46s   sample-d4d4fb5bd\nsample-jnjdp   1/1     Running   0          10s     sample-56dfb978d4\nsample-qqglp   1/1     Running   0          18s     sample-56dfb978d4\n</code></pre>\n<h3>MaxUnavailable</h3>\n<p>MaxUnavailable is the maximum number of Pods that can be unavailable during the update.\nValue can be an absolute number (e.g., 5) or a percentage of desired number of Pods (e.g., 10%).\nDefault value is 20%.</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">CloneSet</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-comment\"># ...</span>\n  <span class=\"hljs-attr\">updateStrategy:</span>\n    <span class=\"hljs-attr\">maxUnavailable:</span> <span class=\"hljs-number\">20</span><span class=\"hljs-string\">%</span>\n</code></pre>\n<h3>MaxSurge</h3>\n<p>MaxSurge is the maximum number of pods that can be scheduled above the desired replicas during the update.\nValue can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\nDefaults to 0.</p>\n<p>If maxSurge is set somewhere, cloneset-controller will create <code>maxSurge</code> number of Pods above the <code>replicas</code>,\nwhen it finds multiple active revisions of Pods which means the CloneSet is in the update stage.\nAfter all Pods except <code>partition</code> number have been updated to the latest revision, <code>maxSurge</code> number Pods will be deleted,\nand the number of Pods will be equal to the <code>replica</code> number.</p>\n<p>What's more, maxSurge is forbidden to use with <code>InPlaceOnly</code> policy.\nWhen maxSurge is used with <code>InPlaceIfPossible</code>, controller will create additional Pods with latest revision first,\nand then update the rest Pods with old revisions,</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">CloneSet</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-comment\"># ...</span>\n  <span class=\"hljs-attr\">updateStrategy:</span>\n    <span class=\"hljs-attr\">maxSurge:</span> <span class=\"hljs-number\">3</span>\n</code></pre>\n<h3>Update sequence</h3>\n<p>When controller chooses Pods to update, it has default sort logic based on Pod phase and conditions:\n<strong>unscheduled &lt; scheduled, pending &lt; unknown &lt; running, not-ready &lt; ready</strong>.\nIn addition, CloneSet also supports advanced <code>priority</code> and <code>scatter</code> strategies to allow users to specify the update order.</p>\n<h4><code>priority</code> strategy</h4>\n<p>This strategy defines rules for calculating the priority of updating pods.\nAll update candidates will be applied with the priority terms.\n<code>priority</code> can be calculated either by weight or by order.</p>\n<ul>\n<li><code>weight</code>: Priority is determined by the sum of weights for terms that match selector. For example,</li>\n</ul>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">CloneSet</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-comment\"># ...</span>\n  <span class=\"hljs-attr\">updateStrategy:</span>\n    <span class=\"hljs-attr\">priorityStrategy:</span>\n      <span class=\"hljs-attr\">weightPriority:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">weight:</span> <span class=\"hljs-number\">50</span>\n        <span class=\"hljs-attr\">matchSelector:</span>\n          <span class=\"hljs-attr\">matchLabels:</span>\n            <span class=\"hljs-attr\">test-key:</span> <span class=\"hljs-string\">foo</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">weight:</span> <span class=\"hljs-number\">30</span>\n        <span class=\"hljs-attr\">matchSelector:</span>\n          <span class=\"hljs-attr\">matchLabels:</span>\n            <span class=\"hljs-attr\">test-key:</span> <span class=\"hljs-string\">bar</span>\n</code></pre>\n<ul>\n<li><code>order</code>: Priority will be determined by the value of the orderKey. The update candidates are sorted based on the &quot;int&quot; part of the value string. For example, 5 in string &quot;5&quot; and 10 in string &quot;sts-10&quot;.</li>\n</ul>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">CloneSet</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-comment\"># ...</span>\n  <span class=\"hljs-attr\">updateStrategy:</span>\n    <span class=\"hljs-attr\">priorityStrategy:</span>\n      <span class=\"hljs-attr\">orderPriority:</span>\n        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">orderedKey:</span> <span class=\"hljs-string\">some-label-key</span>\n</code></pre>\n<h4><code>scatter</code> strategy</h4>\n<p>This strategy defines rules to make certain Pods be scattered during update.\nFor example, if a CloneSet has <code>replica=10</code>, and we add <code>foo=bar</code> label in 3 Pods and specify the following scatter rule. These 3 Pods will\nbe the 1st, 6th and 10th updated Pods.</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">CloneSet</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-comment\"># ...</span>\n  <span class=\"hljs-attr\">updateStrategy:</span>\n    <span class=\"hljs-attr\">scatterStrategy:</span>\n    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">key:</span> <span class=\"hljs-string\">foo</span>\n      <span class=\"hljs-attr\">value:</span> <span class=\"hljs-string\">bar</span>\n</code></pre>\n<p>Note that:</p>\n<ul>\n<li>Although <code>priority</code> strategy and <code>scatter</code> strategy can be applied together, we strongly suggest to just use one of them to avoid confusion.</li>\n<li>If <code>scatter</code> strategy is used, we suggest to just use one term. Otherwise, the update order can be hard to understand.</li>\n</ul>\n<p>Last but not the least, the above advanced update strategies require independent Pod labeling mechanisms, which are not provided by CloneSet.</p>\n<h3>Paused update</h3>\n<p><code>paused</code> indicates that Pods updating is paused, controller will not update Pods but just maintain the number of replicas.</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">CloneSet</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-comment\"># ...</span>\n  <span class=\"hljs-attr\">updateStrategy:</span>\n    <span class=\"hljs-attr\">paused:</span> <span class=\"hljs-literal\">true</span>\n</code></pre>\n<h3>PreUpdate and PostUpdate</h3>\n<p><code>PreUpdate</code> and <code>PostUpdate</code> can allow users to specify extra tasks before and after Pod update.\nThis feature will be available in future release.</p>\n",
  "link": "/en-us/docs/cloneset.html",
  "meta": {}
}