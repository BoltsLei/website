{
  "filename": "podunavailablebudget.md",
  "__html": "<h1 id=\"podunavailablebudget\">PodUnavailableBudget <a class=\"header-anchor\" href=\"#podunavailablebudget\">#</a></h1>\n<p><strong>FEATURE STATE:</strong> Kruise v0.10.0</p>\n<p>Kubernetes offers <a href=\"https://kubernetes.io/docs/tasks/run-application/configure-pdb/\">Pod Disruption Budget</a> to help you run highly available applications even when you introduce frequent <a href=\"https://kubernetes.io/docs/concepts/workloads/pods/disruptions/\">voluntary disruptions</a>.\nPDB limits the number of Pods of a replicated application that are down simultaneously from voluntary disruptions. However, it can only constrain the voluntary disruption triggered by the <a href=\"https://kubernetes.io/docs/tasks/administer-cluster/safely-drain-node/#eviction-api\">Eviction API</a>.\nFor example, when you run kubectl drain, the tool tries to evict all of the Pods on the Node you're taking out of service.</p>\n<p>In the following voluntary disruption scenarios, there are still business disruption or SLA degradation situations:</p>\n<ol>\n<li>The application owner update deployment's pod template for general upgrading, while cluster administrator drain nodes to scale the cluster down(learn about <a href=\"https://github.com/kubernetes/autoscaler/#readme\">Cluster Autoscaling</a>).</li>\n<li>The middleware team is using <a href=\"https://openkruise.io/en-us/docs/sidecarset.html\">SidecarSet</a> to rolling upgrade the sidecar containers of the cluster, e.g. ServiceMesh envoy, while HPA triggers the scale-down of business applications.</li>\n<li>The application owner and middleware team release the same Pods at the same time based on OpenKruise cloneSet, sidecarSet in-place upgrades</li>\n</ol>\n<p>In voluntary disruption scenarios, PodUnavailableBudget can achieve the effect of preventing application disruption or SLA degradation, which greatly improves the high availability of application services.</p>\n<p>A sample PodUnavailableBudget yaml looks like following:</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">PodUnavailableBudget</span>\n<span class=\"hljs-attr\">metadata:</span>\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">web-server-pub</span>\n  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">web</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-attr\">targetRef:</span>\n    <span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n    <span class=\"hljs-comment\"># cloneset, deployment, statefulset etc.</span>\n    <span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">CloneSet</span>\n    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">web-server</span>\n  <span class=\"hljs-comment\"># selector label query over pods managed by the budget</span>\n  <span class=\"hljs-comment\"># selector and TargetReference are mutually exclusive, targetRef is priority to take effect.</span>\n  <span class=\"hljs-comment\"># selector is commonly used in scenarios where applications are deployed using multiple workloads,</span>\n  <span class=\"hljs-comment\"># and targetRef is used for protection against a single workload.</span>\n<span class=\"hljs-comment\"># selector:</span>\n<span class=\"hljs-comment\">#   matchLabels:</span>\n<span class=\"hljs-comment\">#     app: web-server</span>\n  <span class=\"hljs-comment\"># maximum number of Pods unavailable for the current cloneset, the example is cloneset.replicas(5) * 60% = 3</span>\n  <span class=\"hljs-comment\"># maxUnavailable and minAvailable are mutually exclusive, maxUnavailable is priority to take effect</span>\n  <span class=\"hljs-attr\">maxUnavailable:</span> <span class=\"hljs-number\">60</span><span class=\"hljs-string\">%</span>\n  <span class=\"hljs-comment\"># Minimum number of Pods available for the current cloneset, the example is cloneset.replicas(5) * 40% = 2</span>\n<span class=\"hljs-comment\"># minAvailable: 40%</span>\n<span class=\"hljs-string\">-----------------------</span>\n\n<span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">CloneSet</span>\n<span class=\"hljs-attr\">metadata:</span>\n  <span class=\"hljs-attr\">labels:</span>\n    <span class=\"hljs-attr\">app:</span> <span class=\"hljs-string\">web-server</span>\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">web-server</span>\n  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">web</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-attr\">replicas:</span> <span class=\"hljs-number\">5</span>\n  <span class=\"hljs-attr\">selector:</span>\n    <span class=\"hljs-attr\">matchLabels:</span>\n      <span class=\"hljs-attr\">app:</span> <span class=\"hljs-string\">web-server</span>\n  <span class=\"hljs-attr\">template:</span>\n    <span class=\"hljs-attr\">metadata:</span>\n      <span class=\"hljs-attr\">labels:</span>\n        <span class=\"hljs-attr\">app:</span> <span class=\"hljs-string\">web-server</span>\n    <span class=\"hljs-attr\">spec:</span>\n      <span class=\"hljs-attr\">containers:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">nginx</span>\n        <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">nginx:alpine</span>\n</code></pre>\n<h2 id=\"implementation\">Implementation <a class=\"header-anchor\" href=\"#implementation\">#</a></h2>\n<p>This program customizes the PodUnavailableBudget (later referred to as PUB) CRD resource to describe the desired state of the application, and the working mechanism is shown below:</p>\n<p><img src=\"../../img/docs/podunavailablebudget.png\" alt=\"PodUnavailableBudget\"></p>\n<h2 id=\"comparison-with-kubernetes-native-pdb\">Comparison with Kubernetes native PDB <a class=\"header-anchor\" href=\"#comparison-with-kubernetes-native-pdb\">#</a></h2>\n<p>Kubernetes PodDisruptionBudget implements protection against Pod Eviction based on the EvictionREST interface,\nwhile PodUnavailableBudget intercepts all pod modification requests through the admission webhook validating mechanism (Many voluntary disruption scenarios can be summarized as modifications to Pod resources),\nand reject the request if the modification does not satisfy the desired state of the PUB.</p>\n<p><strong>Pub contains all the protection capabilities of kubernetes PDB, you can use both, or use pub independently to implement your application protection (Recommend).</strong></p>\n<h2 id=\"feature-gates\">feature-gates <a class=\"header-anchor\" href=\"#feature-gates\">#</a></h2>\n<p>PodUnavailableBudget protection against Pods is turned off by default, if you want to turn it on set feature-gates <em>PodUnavailableBudgetDeleteGate</em> and <em>PodUnavailableBudgetUpdateGate</em>.</p>\n<pre><code class=\"language-bash\">$ helm install kruise https://... --<span class=\"hljs-built_in\">set</span> featureGates=<span class=\"hljs-string\">\"PodUnavailableBudgetDeleteGate=true\\,PodUnavailableBudgetUpdateGate=true\"</span>\n</code></pre>\n<h2 id=\"podunavailablebudget-status\">PodUnavailableBudget Status <a class=\"header-anchor\" href=\"#podunavailablebudget-status\">#</a></h2>\n<pre><code class=\"language-yaml\"><span class=\"hljs-comment\"># kubectl describe podunavailablebudgets web-server-pub</span>\n<span class=\"hljs-attr\">Name:</span>         <span class=\"hljs-string\">web-server-pub</span>\n<span class=\"hljs-attr\">Kind:</span>         <span class=\"hljs-string\">PodUnavailableBudget</span>\n<span class=\"hljs-attr\">Status:</span>\n  <span class=\"hljs-attr\">unavailableAllowed:</span>   <span class=\"hljs-number\">3</span>   <span class=\"hljs-comment\"># unavailableAllowed number of pod unavailable that are currently allowed</span>\n  <span class=\"hljs-attr\">currentAvailable:</span>     <span class=\"hljs-number\">5</span>   <span class=\"hljs-comment\"># currentAvailable current number of available pods</span>\n  <span class=\"hljs-attr\">desiredAvailable:</span>     <span class=\"hljs-number\">2</span>   <span class=\"hljs-comment\"># desiredAvailable minimum desired number of available pods</span>\n  <span class=\"hljs-attr\">totalReplicas:</span>        <span class=\"hljs-number\">5</span>   <span class=\"hljs-comment\"># totalReplicas total number of pods counted by this PUB</span>\n</code></pre>\n",
  "link": "/en-us/docs/podunavailablebudget.html",
  "meta": {
    "title": "PodUnavailableBudget"
  }
}