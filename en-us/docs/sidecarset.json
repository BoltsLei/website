{
  "filename": "sidecarset.md",
  "__html": "<h1>SidecarSet</h1>\n<p>This controller leverages the admission webhook to automatically\ninject a sidecar container for every selected Pod when the Pod is created. The Sidecar\ninjection process is similar to the automatic sidecar injection mechanism used in\n<a href=\"https://istio.io/docs/setup/kubernetes/additional-setup/sidecar-injection/\">istio</a>.</p>\n<p>Besides injection during Pod creation, SidecarSet controller also provides\nadditional capabilities such as in-place Sidecar container image upgrade, mounting Sidecar volumes, etc.\nBasically, SidecarSet decouples the Sidecar container lifecycle\nmanagement from the main container lifecycle management.</p>\n<p>The SidecarSet is preferable for managing stateless sidecar containers such as\nmonitoring tools or operation agents. Its API spec is listed below:</p>\n<pre><code class=\"language-go\"><span class=\"hljs-keyword\">type</span> SidecarSetSpec <span class=\"hljs-keyword\">struct</span> {\n    <span class=\"hljs-comment\">// selector is a label query over pods that should be injected</span>\n    Selector *metav1.LabelSelector <span class=\"hljs-string\">`json:\"selector,omitempty\"`</span>\n\n    <span class=\"hljs-comment\">// containers specifies the list of containers to be injected into the pod</span>\n    Containers []SidecarContainer <span class=\"hljs-string\">`json:\"containers,omitempty\"`</span>\n\n    <span class=\"hljs-comment\">// List of volumes that can be mounted by sidecar containers</span>\n    Volumes []corev1.Volume <span class=\"hljs-string\">`json:\"volumes,omitempty\"`</span>\n\n    <span class=\"hljs-comment\">// Paused indicates that the sidecarset is paused and will not be processed by the sidecarset controller.</span>\n    Paused <span class=\"hljs-keyword\">bool</span> <span class=\"hljs-string\">`json:\"paused,omitempty\"`</span>\n\n    <span class=\"hljs-comment\">// The sidecarset strategy to use to replace existing pods with new ones.</span>\n    Strategy SidecarSetUpdateStrategy <span class=\"hljs-string\">`json:\"strategy,omitempty\"`</span>\n}\n\n<span class=\"hljs-keyword\">type</span> SidecarContainer <span class=\"hljs-keyword\">struct</span> {\n    corev1.Container\n}\n</code></pre>\n<p>Note that the injection happens at Pod creation time and only Pod spec is updated.\nThe workload template spec will not be updated.</p>\n<h2>Example</h2>\n<h3>Create a SidecarSet</h3>\n<p>The <code>sidecarset.yaml</code> file below describes a SidecarSet that contains a sidecar container named <code>sidecar1</code></p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-comment\"># sidecarset.yaml</span>\n<span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">SidecarSet</span>\n<span class=\"hljs-attr\">metadata:</span>\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">test-sidecarset</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-attr\">selector:</span>\n    <span class=\"hljs-attr\">matchLabels:</span>\n      <span class=\"hljs-attr\">app:</span> <span class=\"hljs-string\">nginx</span>\n  <span class=\"hljs-attr\">strategy:</span>\n    <span class=\"hljs-attr\">rollingUpdate:</span>\n      <span class=\"hljs-attr\">maxUnavailable:</span> <span class=\"hljs-number\">2</span>\n  <span class=\"hljs-attr\">containers:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">sidecar1</span>\n    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">centos:6.7</span>\n    <span class=\"hljs-attr\">command:</span> <span class=\"hljs-string\">[\"sleep\",</span> <span class=\"hljs-string\">\"999d\"</span><span class=\"hljs-string\">]</span> <span class=\"hljs-comment\"># do nothing at all</span>\n    <span class=\"hljs-attr\">volumeMounts:</span>\n    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">log-volume</span>\n      <span class=\"hljs-attr\">mountPath:</span> <span class=\"hljs-string\">/var/log</span>\n  <span class=\"hljs-attr\">volumes:</span> <span class=\"hljs-comment\"># this field will be merged into pod.spec.volumes</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">log-volume</span>\n    <span class=\"hljs-attr\">emptyDir:</span> <span class=\"hljs-string\">{}</span>\n</code></pre>\n<p>Create a SidecarSet based on the YAML file:</p>\n<pre><code class=\"language-shell\">kubectl apply -f sidecarset.yaml\n</code></pre>\n<h3>Create a Pod</h3>\n<p>Create a pod that matches the sidecarset's selector:</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">v1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Pod</span>\n<span class=\"hljs-attr\">metadata:</span>\n  <span class=\"hljs-attr\">labels:</span>\n    <span class=\"hljs-attr\">app:</span> <span class=\"hljs-string\">nginx</span> <span class=\"hljs-comment\"># matches the SidecarSet's selector</span>\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">test-pod</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-attr\">containers:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">app</span>\n    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">nginx:1.15.1</span>\n</code></pre>\n<p>Create this pod and now you will find it's injected with <code>sidecar1</code>:</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> kubectl get pod</span>\nNAME       READY   STATUS    RESTARTS   AGE\ntest-pod   2/2     Running   0          118s\n</code></pre>\n<p>In the meantime, the SidecarSet status updated:</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> kubectl get sidecarset <span class=\"hljs-built_in\">test</span>-sidecarset -o yaml | grep -A4 status</span>\nstatus:\n  matchedPods: 1\n  observedGeneration: 1\n  readyPods: 1\n  updatedPods: 1\n</code></pre>\n<h3>Update a SidecarSet</h3>\n<p>Using <code>kubectl edit sidecarset test-sidecarset</code> to modify SidecarSet image from <code>centos:6.7</code> to <code>centos:6.8</code>, You should find that the matched pods will be updated in-place sequentially.\n<code>.spec.strategy.rollingUpdate.maxUnavailable</code> is an optional field that specifies the maximum number of Pods that can be unavailable during the update process. The default value is 1. The value can be an absolute number or a percentage of desired pods. For example, 10% means 10% * <code>matched pods</code> number of pods can be upgraded simultaneously. The calculated value is rounded down to the nearest integer.</p>\n<p>You could use <code>kubectl patch sidecarset test-sidecarset --type merge -p '{&quot;spec&quot;:{&quot;paused&quot;:true}}'</code> to pause the update procedure.</p>\n<p>If user modifies fields other than image in SidecarSet Spec, the sidecar container in the pod won't get updated until the pod is recreated by workload (e.g., Deployment).\nThis behavior is also referred to as <strong>lazy update</strong> mode.</p>\n",
  "link": "/en-us/docs/sidecarset.html",
  "meta": {}
}