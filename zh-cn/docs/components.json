{
  "filename": "components.md",
  "__html": "<h1>OpenKruise 组件</h1>\n<p>当你在一个 K8s 集群中安装了 Kruise，其实是创建了一些 Kruise 的 CRD 和相关组件。</p>\n<p><img src=\"/img/docs/components.png\" alt=\"OpenKruise components\"></p>\n<h2>CRDs</h2>\n<p>以下的 CRD 会安装到你的集群中：</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> kubectl get crd | grep kruise.io</span>\nadvancedcronjobs.apps.kruise.io                  2020-12-14T02:45:08Z\nbroadcastjobs.apps.kruise.io                     2020-12-14T02:45:09Z\nclonesets.apps.kruise.io                         2020-12-14T02:45:09Z\ndaemonsets.apps.kruise.io                        2020-12-14T02:45:09Z\nsidecarsets.apps.kruise.io                       2020-12-14T02:45:09Z\nstatefulsets.apps.kruise.io                      2020-12-14T02:45:09Z\nuniteddeployments.apps.kruise.io                 2020-12-14T02:45:09Z\n</code></pre>\n<h2>Kruise-manager</h2>\n<p>Kruise-manager 是一个运行 controller 和 webhook 中心组件，它通过 Deployment 部署在 <code>kruise-system</code> 命名空间中。</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> kubectl get deploy -n kruise-system</span>\nNAME                        READY   UP-TO-DATE   AVAILABLE   AGE\nkruise-controller-manager   2/2     2            2           11m\n<span class=\"hljs-meta\">\n$</span><span class=\"bash\"> kubectl get pod -n kruise-system</span>\nNAME                                         READY   STATUS    RESTARTS   AGE\nkruise-controller-manager-78b98899c6-f8t67   1/1     Running   0          11m\nkruise-controller-manager-78b98899c6-tjlxl   1/1     Running   0          11m\n</code></pre>\n<!-- It can be deployed as multiple replicas with Deployment, but only one of them could become leader and start working, others will keep retrying to acquire the lock. -->\n<p>逻辑上来说，如 cloneset-controller/sidecarset-controller 这些的 controller 都是独立运行的。不过为了减少复杂度，它们都被打包在一个独立的二进制文件、并运行在 <code>kruise-controller-manager-xxx</code> 这个 Pod 中。</p>\n<p>除了 controller 之外，<code>kruise-controller-manager-xxx</code> 中还包含了针对 Kruise CRD 以及 Pod 资源的 admission webhook。Kruise-manager 会创建一些 webhook configurations 来配置哪些资源需要感知处理、以及提供一个 Service 来给 kube-apiserver 调用。</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> kubectl get svc -n kruise-system</span>\nNAME                                TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)   AGE\nkruise-webhook-server-service       ClusterIP   10.109.43.220    &lt;none&gt;        443/TCP   12m\n</code></pre>\n<p>上述的 <code>kruise-webhook-server-service</code> 非常重要，是提供给 kube-apiserver 调用的。</p>\n<h2>Kruise-daemon</h2>\n<p>这是一个<strong>即将开放</strong>的 daemon 组件，由 DaemonSet 来部署到每个 Node 上，目前主要用于管理 NodeImage 资源来预拉取镜像和上报状态。</p>\n",
  "link": "/zh-cn/docs/components.html",
  "meta": {
    "title": "组件"
  }
}